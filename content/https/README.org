#+TITLE: HTTPS

* Overview
[[file:_img/screenshot_2018-05-13_17-57-49.png]]
1. Client requests secure connection
2. Server responds with a certificate and a public key, etc.
3. Client verifies the certificate received.
4. Client generates a symmetric key, encrypts it with the pubic key received, and send it to Server
5. Session is established

How Client verifies the certificate is based on Chain of Trust, as following:
[[file:_img/screenshot_2018-05-13_18-05-31.png]]
(It seems that ~DN~ stands for /Domain Name/)

Signatures are verified as following:
[[file:_img/screenshot_2018-05-13_18-04-12.png]]

:REFERENCES:
- [[/cryptography]]
- [[https://www.cgi.com/files/white-papers/cgi_whpr_35_pki_e.pdf]]
- https://www.youtube.com/watch?v=4nGrOpo0Cuc
- https://knowledge.symantec.com/support/ssl-certificates-support/index?page=content&actp=CROSSLINK&id=SO16297
- https://commons.wikimedia.org/wiki/File:Digital_Signature_diagram.svg
:END:

* Topics
** SSL vs TLS
- SSL is the predecessor to TLS
- TLS was introduced in 1999 as a new version of SSL and was based on SSL 3.0
- Both SSL 2.0 and 3.0 have been deprecated by the IETF (1.0 was never released)
- When it comes to your servers, you should only have TLS protocols enabled.

:REFERENCES:
- https://www.globalsign.com/en/blog/ssl-vs-tls-difference/
:END:

** SNI
- SNI stands for Server Name Indication, and the successor to VIP (Virtual IP Transition)
- *Stick to SNI*, VIP is being deprecated.
- SNI is a sort of virtual hosting for HTTPS
- Virtual hosting can't just be applied because TLS handshake happens before the serever sees the header.

SNI allows:
- a server to present multiple certificates on the same IP address and TCP port number
- Accordingly, multiple secure (HTTPS) websites (or any other service over TLS) to be served by the same IP address without requiring all those sites to use the same certificate.

When using SNI:
- Client sends the name of the virtual domain as part of the TLS negotiation.
- Server decides which certificate to send based on the request.
